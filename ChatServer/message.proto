syntax = "proto3";

package message;

service VerifyService { 
    rpc GetVerifyCode(GetVerifyRequest) returns (GetVerifyResponse) {}
}

message GetVerifyRequest {
    string email = 1;
}

message GetVerifyResponse {
    int32 error = 1;
    string email = 2;
    string code = 3;
}

service StatusService{
    rpc GetChatServer (GetChatServerRequest) returns (GetChatServerResponse) {}
    rpc Login(LoginRequest) returns (LoginResponse);
}

message GetChatServerRequest{
    string uid = 1;
}

message GetChatServerResponse{
    int32 error = 1;
    string host = 2;
    string port = 3;
    string token = 4;
}

message LoginRequest{
    string uid = 1;
    string token = 2;
}

message LoginResponse{
    int32 error = 1;
    string uid = 2;
    string token = 3;
}

service ChatService{
    rpc SendMessage(ChatMessage) returns (SendMessageResponse) {}
    rpc ReceiveMessages(ReceiveMessagesRequest) returns (stream ChatMessage) {}
    rpc AddFriend(AddFriendRequest) returns (AddFriendResponse) {}
    rpc NotifyAddFriend(NotifyAddFriendRequest) returns (NotifyAddFriendResponse) {}
    rpc GetFriendList(GetFriendListRequest) returns (GetFriendListResponse) {}
}

enum MessageType {
    TEXT = 0;
    IMAGE = 1;
    FILE = 2;
}

message ChatMessage{
    string message_id = 1;
    string from_uid = 2;
    string to_uid = 3;
    string content = 4;
    int64 timestamp = 5;
    MessageType type = 6;
}

message SendMessageResponse{
    int32 error = 1;
    string message_id = 2;
    int64 timestamp = 3;
}

message ReceiveMessagesRequest{
    string uid = 1;
}

message AddFriendRequest{
    string from_uid = 1;
    string to_uid = 2;
    string message = 3;
    int64 timestamp = 4;
}

message AddFriendResponse{
    int32 error = 1;
    string request_id = 2;
}

message NotifyAddFriendRequest{
    string request_id = 1;
    string from_uid = 2;
    string to_uid = 3;
    bool accpect = 4;
}

message NotifyAddFriendResponse{
    int32 error = 1;
    string request_id = 2;
    string from_uid = 3;
    string to_uid = 4;
}

message GetFriendListRequest{
    string uid = 1;
}

message GetFriendListResponse{
    int32 error = 1;
    repeated FriendInfo friends = 2;
}

message FriendInfo {
    string uid = 1;
    string username = 2;
    string avatar = 3;
    string status = 4; // e.g., online, offline, busy
}